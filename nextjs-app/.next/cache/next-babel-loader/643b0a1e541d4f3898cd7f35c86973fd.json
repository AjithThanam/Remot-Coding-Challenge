{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Remot\\\\Remot-Coding-Challenge\\\\nextjs-app\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTrumpTweets, fetchHillaryTweets } from '../redux/actions/tweetAction';\nimport { Container, Row, Card, Button, Jumbotron } from 'react-bootstrap';\nimport React from 'react';\nexport default function Home() {\n  const dispatch = useDispatch();\n  const tweeter = useSelector(state => state);\n  return __jsx(Container, {\n    className: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, __jsx(Jumbotron, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    style: {\n      fontSize: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }\n  }, \"Welcome To The Tweet Fetcher\"), __jsx(\"h5\", {\n    style: {\n      margin: \" 0 0 20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }\n  }, tweeter.tweeter.info), __jsx(Button, {\n    variant: \"danger active\",\n    block: true,\n    onClick: () => dispatch(fetchTrumpTweets()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Show Trump's Tweets\"), __jsx(Button, {\n    variant: \"primary active\",\n    block: true,\n    onClick: () => {\n      dispatch(fetchHillaryTweets());\n      forceUpdate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Show Hillary's Tweets\"))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-md-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, mainView(tweeter)))));\n}\nexport function mainView(obj) {\n  if (obj.tweeter.selected) {\n    {\n      obj.tweeter.tweets.map(function (tweet, index) {\n        return __jsx(Card, {\n          className: \"sml-card\",\n          block: true,\n          style: {\n            margin: \"10px\",\n            width: \"100%\"\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, __jsx(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, \"Tweet #\", index + 1), __jsx(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }, __jsx(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }\n        }, tweet), __jsx(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        }, obj.tweeter.dates[index])));\n      });\n    }\n  } else {\n    return __jsx(Card, {\n      className: \"sml-card\",\n      block: true,\n      style: {\n        margin: \"10px\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, obj.tweeter.info)));\n  }\n}\nexport function isJson(str) {\n  console.log(\"entered function\");\n\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    console.log(\"flase\");\n    return false;\n  }\n\n  console.log(\"true\");\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/pages/index.js"],"names":["useDispatch","useSelector","fetchTrumpTweets","fetchHillaryTweets","Container","Row","Card","Button","Jumbotron","React","Home","dispatch","tweeter","state","fontSize","margin","info","forceUpdate","mainView","obj","selected","tweets","map","tweet","index","width","dates","isJson","str","console","log","JSON","parse","e"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchTrumpTweets, fetchHillaryTweets } from '../redux/actions/tweetAction'\r\nimport { Container, Row, Card, Button, Jumbotron } from 'react-bootstrap'\r\nimport React from 'react';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const dispatch = useDispatch();\r\n    const tweeter  = useSelector(state => state);\r\n    \r\n    return (\r\n        <Container className=\"md-container\">\r\n          <Container>\r\n              <Jumbotron className=\"text-center\" >\r\n                <Container>\r\n                  <h1 className=\"title\" style={{ fontSize: \"50px\" }}>Welcome To The Tweet Fetcher</h1>\r\n                  <h5 style={{ margin: \" 0 0 20px 0\" }}>{tweeter.tweeter.info}</h5>\r\n                  \r\n                    <Button variant=\"danger active\" block onClick={() => dispatch(fetchTrumpTweets())}>\r\n                        Show Trump's Tweets\r\n                    </Button>\r\n                    <Button variant=\"primary active\" block onClick={() => {dispatch(fetchHillaryTweets()); forceUpdate();} }>\r\n                        Show Hillary's Tweets\r\n                    </Button>\r\n                </Container>\r\n              </Jumbotron>\r\n             <Container>\r\n              <Row className=\"justify-content-md-between\">\r\n                {mainView(tweeter)}\r\n              </Row>\r\n        </Container> \r\n      </Container>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport function mainView(obj){\r\n      if(obj.tweeter.selected){\r\n          {obj.tweeter.tweets.map(function(tweet, index){\r\n            return(\r\n              <Card className=\"sml-card\" block style={{ margin: \"10px\", width:\"100%\" }} key={ index }>\r\n                <Card.Header>Tweet #{ index + 1 }</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>{ tweet }</Card.Title>\r\n                  <Card.Text>\r\n                    {obj.tweeter.dates[index]}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n      }\r\n      else{\r\n        return(\r\n          <Card className=\"sml-card\" block style={{ margin: \"10px\", width:\"100%\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>{ obj.tweeter.info }</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n        )\r\n      }\r\n    }\r\n\r\nexport function isJson(str){\r\n    console.log(\"entered function\")\r\n    try {\r\n        JSON.parse(str);\r\n    } catch (e) {\r\n        console.log(\"flase\")\r\n        return false;\r\n    }\r\n    console.log(\"true\")\r\n    return true;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}