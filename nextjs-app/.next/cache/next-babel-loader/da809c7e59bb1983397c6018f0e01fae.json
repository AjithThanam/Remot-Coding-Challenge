{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nimport Key from '../../key.json';\nimport axios from 'axios';\nimport fetcher from '../fetcher';\nexport var fetchposts = function fetchposts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: types.GET_POSTS,\n                payload: ['post']\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var setposts = function setposts() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('https://jsonplaceholder.typicode.com/comments');\n\n            case 2:\n              res = _context2.sent;\n              dispatch({\n                type: types.SET_POSTS,\n                payload: res.data[0].id\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/redux/actions/postAction.js"],"names":["types","Key","axios","fetcher","fetchposts","dispatch","type","GET_POSTS","payload","setposts","fetch","res","SET_POSTS","data","id"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACxBA,cAAAA,QAAQ,CAAC;AACTC,gBAAAA,IAAI,EAAEN,KAAK,CAACO,SADH;AAETC,gBAAAA,OAAO,EAAE,CAAC,MAAD;AAFA,eAAD,CAAR;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAOP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA,yEAAM,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRK,KAAK,CAAC,+CAAD,CADG;;AAAA;AACpBC,cAAAA,GADoB;AAE1BN,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEN,KAAK,CAACY,SADP;AAELJ,gBAAAA,OAAO,EAACG,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYC;AAFf,eAAD,CAAR;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import * as types from '../types'\r\nimport Key from '../../key.json';\r\nimport axios from 'axios'\r\nimport fetcher from '../fetcher'\r\n\r\n\r\nexport const fetchposts = () => async dispatch => {\r\n        dispatch({\r\n        type: types.GET_POSTS,\r\n        payload: ['post']\r\n    })\r\n}\r\n\r\nexport const setposts = () => async dispatch => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments')\r\n    dispatch({\r\n        type: types.SET_POSTS,\r\n        payload:res.data[0].id\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}