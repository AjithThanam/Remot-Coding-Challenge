{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nimport Key from '../../key.json';\nimport axios from 'axios';\nimport fetcher from '../fetcher';\nexport var fetchposts = function fetchposts(fetcher) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //     const trumpEndpoint = 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=realDonaldTrump&count=1';\n              //     // let response = await fetch(trumpEndpoint,{\n              //     //     headers: {\n              //     //         'Authorization': Key.key\n              //     //     }\n              //     // })\n              //     // response = await response.json();\n              //     axios.get(trumpEndpoint, {\n              //         params: {\n              //             'Authorization': Key.key\n              //         }\n              //     }).then(function (response) {\n              //     console.log(response);\n              //   })\n              dispatch({\n                type: types.GET_POSTS,\n                payload: fetcher\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var setposts = function setposts() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: types.SET_POSTS,\n                payload: ['4th post', '5th post', '6th post']\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/redux/actions/postAction.js"],"names":["types","Key","axios","fetcher","fetchposts","dispatch","type","GET_POSTS","payload","setposts","SET_POSTS"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,OAAD;AAAA;AAAA,wEAAa,iBAAME,QAAN;AAAA;AAAA;AAAA;AAAA;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIIA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEN,KAAK,CAACO,SADP;AAELC,gBAAAA,OAAO,EAAEL;AAFJ,eAAD,CAAR;;AApBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AA0BP,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA,yEAAM,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAC1BA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEN,KAAK,CAACU,SADP;AAELF,gBAAAA,OAAO,EAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB;AAFH,eAAD,CAAR;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import * as types from '../types'\r\nimport Key from '../../key.json';\r\nimport axios from 'axios'\r\nimport fetcher from '../fetcher'\r\n\r\n\r\nexport const fetchposts = (fetcher) => async dispatch => {\r\n    \r\n//     const trumpEndpoint = 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=realDonaldTrump&count=1';\r\n//     // let response = await fetch(trumpEndpoint,{\r\n//     //     headers: {\r\n//     //         'Authorization': Key.key\r\n//     //     }\r\n//     // })\r\n//     // response = await response.json();\r\n\r\n//     axios.get(trumpEndpoint, {\r\n//         params: {\r\n//             'Authorization': Key.key\r\n//         }\r\n//     }).then(function (response) {\r\n//     console.log(response);\r\n//   })\r\n    \r\n    \r\n\r\n    dispatch({\r\n        type: types.GET_POSTS,\r\n        payload: fetcher\r\n    })\r\n}\r\n\r\nexport const setposts = () => async dispatch => {\r\n    dispatch({\r\n        type: types.SET_POSTS,\r\n        payload:['4th post', '5th post', '6th post']\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}