{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from '../types';\nconst initialState = {\n  tweets: [\"Who's Tweets Would You Like To See\"],\n  dates: [\"\"],\n  info: \"Please Select Who's Tweets You Would Like to See\"\n};\nexport const tweetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRUMP_TWEETS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tweets: action.payload,\n        dates: action.dates,\n        info: \"You Are Currently Viewing Donald Trump's Tweets\"\n      });\n\n    case types.HILLARY_TWEETS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tweets: action.payload,\n        dates: action.dates,\n        info: \"You Are Currently Viewing Hillary Clinton's Tweets\"\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/redux/reducers/tweetReducer.js"],"names":["types","initialState","tweets","dates","info","tweetReducer","state","action","type","TRUMP_TWEETS","payload","HILLARY_TWEETS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,CAAC,oCAAD,CADS;AAEjBC,EAAAA,KAAK,EAAE,CAAC,EAAD,CAFU;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAK,CAACS,YAAX;AACI,6CACOH,KADP;AAEIJ,QAAAA,MAAM,EAAEK,MAAM,CAACG,OAFnB;AAGIP,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAHlB;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKJ,KAAK,CAACW,cAAX;AACI,6CACOL,KADP;AAEIJ,QAAAA,MAAM,EAAEK,MAAM,CAACG,OAFnB;AAGIP,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAHlB;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ;AACI,aAAOE,KAAP;AAhBR;AAkBH,CAnBM","sourcesContent":["import * as types from '../types'\r\n\r\nconst initialState = {\r\n    tweets: [\"Who's Tweets Would You Like To See\"],\r\n    dates: [\"\"],\r\n    info: \"Please Select Who's Tweets You Would Like to See\"\r\n}\r\n\r\nexport const tweetReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case types.TRUMP_TWEETS:\r\n            return {\r\n                ...state,\r\n                tweets: action.payload,\r\n                dates: action.dates,\r\n                info: \"You Are Currently Viewing Donald Trump's Tweets\"\r\n            }\r\n        case types.HILLARY_TWEETS:\r\n            return {\r\n                ...state,\r\n                tweets: action.payload,\r\n                dates: action.dates,\r\n                info: \"You Are Currently Viewing Hillary Clinton's Tweets\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}