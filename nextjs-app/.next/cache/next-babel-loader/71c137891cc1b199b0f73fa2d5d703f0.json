{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nimport Key from '../../key.json';\nexport var fetchposts = function fetchposts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=realDonaldTrump&count=1\", {\n                headers: {\n                  'Authorization': Key.key\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: types.GET_POSTS,\n                payload: response\n              }));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", dispatch({\n                type: types.GET_POSTS,\n                err: _context.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var setposts = function setposts() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: types.SET_POSTS,\n                payload: ['4th post', '5th post', '6th post']\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/redux/actions/postAction.js"],"names":["types","Key","fetchposts","dispatch","fetch","headers","key","then","res","json","response","type","GET_POSTS","payload","err","setposts","SET_POSTS"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAWDC,KAAK,CACxB,6FADwB,EAExB;AACIC,gBAAAA,OAAO,EAAE;AACL,mCAAiBJ,GAAG,CAACK;AADhB;AADb,eAFwB,CAAL,CAOrBC,IAPqB,CAOhB,UAAAC,GAAG,EAAI;AAAE,uBAAOA,GAAG,CAACC,IAAJ,EAAP;AAAmB,eAPZ,CAXC;;AAAA;AAWlBC,cAAAA,QAXkB;AAAA,+CAoBjBP,QAAQ,CAAC;AACZQ,gBAAAA,IAAI,EAAEX,KAAK,CAACY,SADA;AAEZC,gBAAAA,OAAO,EAAEH;AAFG,eAAD,CApBS;;AAAA;AAAA;AAAA;AAAA,+CAyBrBP,QAAQ,CAAC;AACZQ,gBAAAA,IAAI,EAAEX,KAAK,CAACY,SADA;AAEZE,gBAAAA,GAAG;AAFS,eAAD,CAzBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAqCP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA,yEAAM,kBAAMZ,QAAN;AAAA;AAAA;AAAA;AAAA;AAC1BA,cAAAA,QAAQ,CAAC;AACLQ,gBAAAA,IAAI,EAAEX,KAAK,CAACgB,SADP;AAELH,gBAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB;AAFJ,eAAD,CAAR;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import * as types from '../types'\r\nimport Key from '../../key.json';\r\n\r\n\r\nexport const fetchposts = () => async dispatch => {\r\n\r\n    //const trumpEndpoint = 'https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=realDonaldTrump&count=1';\r\n    // let response = await fetch(\"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=realDonaldTrump&count=1\",{\r\n    //     headers: {\r\n    //         'Authorization': Key.key\r\n    //     }\r\n    // })\r\n    // response = await response.json();\r\n\r\n    try {\r\n        const response = await fetch(\r\n            \"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=realDonaldTrump&count=1\",\r\n            {\r\n                headers: {\r\n                    'Authorization': Key.key\r\n                }\r\n            }\r\n        ).then(res => { return res.json() });\r\n\r\n        return dispatch({\r\n            type: types.GET_POSTS,\r\n            payload: response\r\n        });\r\n    } catch(err) {\r\n    return dispatch({\r\n        type: types.GET_POSTS,\r\n        err\r\n    });\r\n}\r\n\r\n// dispatch({\r\n//     type: types.GET_POSTS,\r\n//     payload: ['1st post', '2nd post', '3rd post']\r\n// })\r\n}\r\n\r\nexport const setposts = () => async dispatch => {\r\n    dispatch({\r\n        type: types.SET_POSTS,\r\n        payload: ['4th post', '5th post', '6th post']\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}