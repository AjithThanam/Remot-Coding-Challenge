{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../types';\nvar initialState = {\n  posts: [\"state is default\"],\n  post: {}\n};\nexport var postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case types.SET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/redux/reducers/postReducer.js"],"names":["types","initialState","posts","post","postReducer","state","action","type","GET_POSTS","payload","SET_POSTS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC,kBAAD,CADU;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;AAKA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,SAAX;AACI,6CACOH,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAFlB;;AAIJ,SAAKT,KAAK,CAACU,SAAX;AACI,6CACOL,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAFlB;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfM","sourcesContent":["import * as types from '../types'\r\n\r\nconst initialState = {\r\n    posts: [\"state is default\"],\r\n    post: {}\r\n}\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case types.GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case types.SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}