{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Remot\\\\Remot-Coding-Challenge\\\\nextjs-app\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTrumpTweets, fetchHillaryTweets } from '../redux/actions/tweetAction';\nimport { Container, Row, Card, Button, Jumbotron } from 'react-bootstrap';\nimport React from 'react';\nexport default function Home() {\n  const dispatch = useDispatch();\n  const tweeter = useSelector(state => state); //const { user } = useSelector(state => state.user)\n  //let tweetJSON = { tweeter}\n\n  console.log(tweeter.tweeter); // if(isJson(tweetJSON)){\n  //     tweetJSON = JSON.parse(tweetJSON.tweeter)  \n  // }\n\n  return __jsx(Container, {\n    className: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(Jumbotron, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3925120640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }, \"Welcome To The Tweet Fetcher\"), __jsx(\"p\", {\n    className: \"jsx-3925120640\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, tweeter.tweeter.user), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"primary active block\",\n    onClick: () => dispatch(fetchTrumpTweets()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Show Trump's Tweets\"), __jsx(Button, {\n    variant: \"primary active block\",\n    onClick: () => dispatch(fetchHillaryTweets()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Show Hillary's Tweets\")))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-md-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, tweeter.tweeter.tweets.map(function (tweet, index) {\n    return __jsx(Card, {\n      className: \"sml-card tweet\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    }, __jsx(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, tweet), __jsx(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, tweeter.tweeter.dates[index])));\n  })))), __jsx(_JSXStyle, {\n    id: \"3925120640\",\n    __self: this\n  }, \".container.jsx-3925120640{margin:50px;}.container.jsx-3925120640{margin:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSG9tZVxcRGVza3RvcFxcUmVtb3RcXFJlbW90LUNvZGluZy1DaGFsbGVuZ2VcXG5leHRqcy1hcHBcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RGtCLEFBR3lCLEFBS2YsWUFKQyxBQUlBIiwiZmlsZSI6IkM6XFxVc2Vyc1xcSG9tZVxcRGVza3RvcFxcUmVtb3RcXFJlbW90LUNvZGluZy1DaGFsbGVuZ2VcXG5leHRqcy1hcHBcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG5pbXBvcnQgeyBmZXRjaFRydW1wVHdlZXRzLCBmZXRjaEhpbGxhcnlUd2VldHMgfSBmcm9tICcuLi9yZWR1eC9hY3Rpb25zL3R3ZWV0QWN0aW9uJ1xyXG5pbXBvcnQgeyBDb250YWluZXIsIFJvdywgQ2FyZCwgQnV0dG9uLCBKdW1ib3Ryb24gfSBmcm9tICdyZWFjdC1ib290c3RyYXAnXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSG9tZSgpIHtcclxuXHJcbiAgICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcbiAgICBjb25zdCB0d2VldGVyICA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuICAgIC8vY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS51c2VyKVxyXG4gICAgLy9sZXQgdHdlZXRKU09OID0geyB0d2VldGVyfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKHR3ZWV0ZXIudHdlZXRlcilcclxuICAgIC8vIGlmKGlzSnNvbih0d2VldEpTT04pKXtcclxuICAgIC8vICAgICB0d2VldEpTT04gPSBKU09OLnBhcnNlKHR3ZWV0SlNPTi50d2VldGVyKSAgXHJcbiAgICAvLyB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cIm1kLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgPENvbnRhaW5lcj5cclxuICAgICAgICAgICAgICA8SnVtYm90cm9uIGZsdWlkPlxyXG4gICAgICAgICAgICAgICAgPENvbnRhaW5lcj5cclxuICAgICAgICAgICAgICAgICAgPGgxPldlbGNvbWUgVG8gVGhlIFR3ZWV0IEZldGNoZXI8L2gxPlxyXG4gICAgICAgICAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgICAgICAgICB7dHdlZXRlci50d2VldGVyLnVzZXJ9XHJcbiAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgICAgPFJvdz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJwcmltYXJ5IGFjdGl2ZSBibG9ja1wiIG9uQ2xpY2s9eygpID0+IGRpc3BhdGNoKGZldGNoVHJ1bXBUd2VldHMoKSl9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTaG93IFRydW1wJ3MgVHdlZXRzXHJcbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwicHJpbWFyeSBhY3RpdmUgYmxvY2tcIiBvbkNsaWNrPXsoKSA9PiBkaXNwYXRjaChmZXRjaEhpbGxhcnlUd2VldHMoKSl9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTaG93IEhpbGxhcnkncyBUd2VldHNcclxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgPC9Sb3c+XHJcbiAgICAgICAgICAgICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgICAgICAgICA8L0p1bWJvdHJvbj5cclxuICAgICAgICAgICAgPENvbnRhaW5lcj5cclxuICAgICAgICAgICAgICA8Um93IGNsYXNzTmFtZT1cImp1c3RpZnktY29udGVudC1tZC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICB7dHdlZXRlci50d2VldGVyLnR3ZWV0cy5tYXAoZnVuY3Rpb24odHdlZXQsIGluZGV4KXtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuKFxyXG4gICAgICAgICAgICAgICAgICAgIDxDYXJkIGNsYXNzTmFtZT1cInNtbC1jYXJkIHR3ZWV0XCIga2V5PXsgaW5kZXggfT5cclxuICAgICAgICAgICAgICAgICAgICAgIDxDYXJkLkJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxDYXJkLlRpdGxlPnsgdHdlZXQgfTwvQ2FyZC5UaXRsZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPENhcmQuVGV4dD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7dHdlZXRlci50d2VldGVyLmRhdGVzW2luZGV4XX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9DYXJkLlRleHQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L0NhcmQuQm9keT5cclxuICAgICAgICAgICAgICAgICAgICA8L0NhcmQ+XHJcbiAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgICAgICAgICA8L1Jvdz5cclxuICAgICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPC9Db250YWluZXI+XHJcblxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAuY29udGFpbmVyIHtcclxuICAgICAgICAgICAgbWFyZ2luOiA1MHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5jb250YWluZXJ7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMTBweFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgYH08L3N0eWxlPiBcclxuXHJcbiAgICA8L0NvbnRhaW5lcj5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvbihzdHIpe1xyXG4gICAgY29uc29sZS5sb2coXCJlbnRlcmVkIGZ1bmN0aW9uXCIpXHJcbiAgICB0cnkge1xyXG4gICAgICAgIEpTT04ucGFyc2Uoc3RyKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImZsYXNlXCIpXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2coXCJ0cnVlXCIpXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG5cclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Home\\\\\\\\Desktop\\\\\\\\Remot\\\\\\\\Remot-Coding-Challenge\\\\\\\\nextjs-app\\\\\\\\pages\\\\\\\\index.js */\"));\n}\nexport function isJson(str) {\n  console.log(\"entered function\");\n\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    console.log(\"flase\");\n    return false;\n  }\n\n  console.log(\"true\");\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Home/Desktop/Remot/Remot-Coding-Challenge/nextjs-app/pages/index.js"],"names":["useDispatch","useSelector","fetchTrumpTweets","fetchHillaryTweets","Container","Row","Card","Button","Jumbotron","React","Home","dispatch","tweeter","state","console","log","user","tweets","map","tweet","index","dates","isJson","str","JSON","parse","e"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchTrumpTweets, fetchHillaryTweets } from '../redux/actions/tweetAction'\r\nimport { Container, Row, Card, Button, Jumbotron } from 'react-bootstrap'\r\nimport React from 'react';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const dispatch = useDispatch();\r\n    const tweeter  = useSelector(state => state);\r\n    //const { user } = useSelector(state => state.user)\r\n    //let tweetJSON = { tweeter}\r\n\r\n    console.log(tweeter.tweeter)\r\n    // if(isJson(tweetJSON)){\r\n    //     tweetJSON = JSON.parse(tweetJSON.tweeter)  \r\n    // }\r\n\r\n    return (\r\n        <Container className=\"md-container\">\r\n          <Container>\r\n              <Jumbotron fluid>\r\n                <Container>\r\n                  <h1>Welcome To The Tweet Fetcher</h1>\r\n                  <p>\r\n                    {tweeter.tweeter.user}\r\n                  </p>\r\n                  <Row>\r\n                    <Button variant=\"primary active block\" onClick={() => dispatch(fetchTrumpTweets())}>\r\n                        Show Trump's Tweets\r\n                    </Button>\r\n                    <Button variant=\"primary active block\" onClick={() => dispatch(fetchHillaryTweets())}>\r\n                        Show Hillary's Tweets\r\n                    </Button>\r\n                  </Row>\r\n                </Container>\r\n              </Jumbotron>\r\n            <Container>\r\n              <Row className=\"justify-content-md-between\">\r\n                {tweeter.tweeter.tweets.map(function(tweet, index){\r\n                  return(\r\n                    <Card className=\"sml-card tweet\" key={ index }>\r\n                      <Card.Body>\r\n                        <Card.Title>{ tweet }</Card.Title>\r\n                        <Card.Text>\r\n                          {tweeter.tweeter.dates[index]}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </Row>\r\n        </Container>\r\n      </Container>\r\n\r\n      <style jsx>{`\r\n          .container {\r\n            margin: 50px;\r\n          }\r\n\r\n          .container{\r\n            margin: 10px\r\n          }\r\n       `}</style> \r\n\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport function isJson(str){\r\n    console.log(\"entered function\")\r\n    try {\r\n        JSON.parse(str);\r\n    } catch (e) {\r\n        console.log(\"flase\")\r\n        return false;\r\n    }\r\n    console.log(\"true\")\r\n    return true;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}